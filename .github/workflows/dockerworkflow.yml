name: Java CI with Dockerimage

on:
  push:
    branches:
      - cicd
      

jobs:
  build:

    runs-on: ubuntu-latest
    steps:
      - name: clone the replo
        uses: actions/checkout@v3
      - name: Set up Maven
        uses: stCarolas/setup-maven@v5
        with:
          maven-version: 3.8.2
      - name: verfiy maven
        run: mvn -version
      - name: Setup Jdk 11
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin' # See 'Supported distributions' for available options
          java-version: '11'
      - name: Cache
        uses: actions/cache@v4.2.0
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            {{ runner.os }}-m2
      - name: maven build
        run: mvn clean install
      - name: Run tests
        run: mvn test
      - name: sonar build
        uses: exo-actions/sonarcloud-action@1.0.0
        with:
         maven_version: 3.8.2
         jdk_major_version: 11
    # OpenJDK Adopted Distribution (temurin, zulu, adopt, liberica,...)
         jdk_distribution: temurin
         SONAR_TOKEN: ${{ secrets.SONARCLOUD_TOKEN }}
      - name: maven package 
        run: mvn clean package
      - name: setup docker buildx
        uses: docker/setup-buildx-action@v3.8.0
      - name: Login to Docker Hub
        uses: docker/login-action@v3.3.0
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
You're correct in observing that after the initial run, the placeholder TAG won't be present in the mavenwebappdeployment.yaml file, making subsequent attempts to replace "TAG" ineffective. To handle this, you need a more consistent approach that allows repetitive updates to the image tag with every new build, irrespective of the current state.

A more robust solution involves using a placeholder or pattern that remains constant across updates, allowing sed to reliably perform replacements on each run. One effective way is to use a regex pattern that matches the current tag format.

Refactored Workflow for Consistent Update
Here's an updated version of the workflow that ensures the Docker image tag can be updated for every build, even after the first one:

yaml


name: CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repo
        uses: actions/checkout@v2

      - name: Set up build number
        run: echo "BUILD_NUMBER=$(date +%s)" >> $GITHUB_ENV
      - name: Build Docker Images
        run: |
          docker build -t borigisabareesh/mvn-web-app:${{ github.sha }} .
      - name: Push Docker Images
        run: |
          docker push borigisabareesh/mvn-web-app:${{ github.sha }}
      - name: check pwd
        run: ls
      - name: Update deployment tag
        run: |
          sed -i 's~borigisabareesh/mvn-web-app:[^"]*~borigisabareesh/mvn-web-app:${{ githun.sha }}~' mavenwebappdeployment.yaml
          cat mavenwebappdeployment.yaml
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add mavenwebappdeployment.yaml
          git commit -m "Update deployment tag in mavenwebappdeployment.yaml"
          git push

      - name: Verify updated file
        run: cat mavenwebappdeployment.yaml
        
