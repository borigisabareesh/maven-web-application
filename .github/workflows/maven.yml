# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Java CI with Maven

on:
  workflow_dispatch:

jobs:
  build:

    runs-on: self-hosted
    steps:
      - name: clone the replo
        uses: actions/checkout@v3
      - name: Set up Maven
        uses: stCarolas/setup-maven@v5
        with:
          maven-version: 3.8.2
      - name: verfiy maven
        run: mvn -v
      - name: Setup Jdk 11
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin' # See 'Supported distributions' for available options
          java-version: '11'
      - name: Cache
        uses: actions/cache@v4.2.0
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            {{ runner.os }}-m2
      - name: maven build
        run: mvn clean install
      - name: check DNS resolution
        run: nslookup google.com
      - name: test http connectivity
        run: curl -I http://192.168.29.77:9000
      - name: Run tests
        run: mvn test 
      - name: Test SonarQube
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          curl -v -u ${{ env.SONAR_TOKEN }}: http://192.168.29.77:9000/api/user_tokens/search
      - name: sonar build
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_URL: ${{ secrets.SONAR_URL }}
        run: mvn clean verify sonar:sonar -Dsonar.host.url=${{ secrets.SONAR_URL }} -Dsonar.login=${{ secrets.SONAR_TOKEN }}
